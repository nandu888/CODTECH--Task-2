import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import org.json.JSONObject;

public class WeatherApp {

    // Replace with your OpenWeatherMap API key
    private static final String API_KEY = "YOUR_API_KEY";
    private static final String BASE_URL = "http://api.openweathermap.org/data/2.5/weather";

    public static void main(String[] args) {
        String city = "London"; // Replace with the desired city
        String apiUrl = BASE_URL + "?q=" + city + "&appid=" + API_KEY + "&units=metric";

        try {
            // Fetch weather data
            String jsonResponse = sendHttpGetRequest(apiUrl);

            // Parse JSON response
            JSONObject jsonObject = new JSONObject(jsonResponse);

            // Extract and display weather data
            String cityName = jsonObject.getString("name");
            JSONObject main = jsonObject.getJSONObject("main");
            double temperature = main.getDouble("temp");
            int humidity = main.getInt("humidity");
            JSONObject weather = jsonObject.getJSONArray("weather").getJSONObject(0);
            String weatherDescription = weather.getString("description");

            // Display structured weather data
            System.out.println("Weather in " + cityName + ":");
            System.out.println("Temperature: " + temperature + "Â°C");
            System.out.println("Humidity: " + humidity + "%");
            System.out.println("Description: " + weatherDescription);

        } catch (IOException e) {
            System.err.println("Error fetching weather data: " + e.getMessage());
        }
    }

    // Helper method to send an HTTP GET request
    private static String sendHttpGetRequest(String apiUrl) throws IOException {
        URL url = new URL(apiUrl);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");

        int responseCode = connection.getResponseCode();
        if (responseCode == HttpURLConnection.HTTP_OK) {
            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String inputLine;
            StringBuilder response = new StringBuilder();

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();
            return response.toString();
        } else {
            throw new IOException("HTTP request failed with response code: " + responseCode);
        }
    }
}
